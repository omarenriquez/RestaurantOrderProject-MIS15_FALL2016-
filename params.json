{
  "name": "Restaurant Order Project",
  "tagline": "MIS 15 Project 3, a multi-form application that enables the user to place an order for a mock restaurant.",
  "body": "### About the Project\r\nIn this project I created a multi-forms Windows Form Application that would allow customers to place orders at a restaurant. The application had to include two windows forms that were related, one formed was the \"Order\" for and the second one the \"Menu\" form. The program included exception handling, for all the elements in the application. It also included data validation for every part of the Order and Menu form. \r\n\r\n### Project Requirements\r\nThe order form must have a drop down menu so the customer can select the table they are sitting at. \r\n* A summary of the order they placed based off of the Menu form. \r\n* A \"Save\" button and an \"Exit\" button.\r\n\r\n* The Menu form included two radio buttons that asked the user whether their order was \"To Go\" or \"Eat In\".\r\n\r\n* Form should present a list of menu items.\r\n\r\n* A cooking instructions text box in which the customer could request special cooking instructions for their entree.\r\n\r\n* A sides drop down menu and a dessert drop down menu. \r\n\r\n* Once the customer selects the order they have the option of saving their order or exiting. \r\n\r\n* If the customer tries to exit without saving the program displays a dialog box that asks the user if they are sure they want to exit the application without saving.\r\n\r\n### Steps to Completion\r\n1. Created the forms and named each object in each form accordingly.\r\n2. Wrote the code for the \"Order\" form, created an isValidData method to handle data validation.\r\n3. Wrote the code for the Menu form where I wrote in what the options for the Entree, Sides, and Desserts menus were.\r\n4. I also created exception handlers and data validation for this form that would require the user to select every part of the order before he was able to complete the order.\r\n5. Wired the events of the exit button on the \"Order\" form that would prompt the user to save data ONLY if the user had not saved the data before.\r\n6. Wrote code in that executed when the user saved a completed order, this code would clear everything and allow the user to reenter another order.\r\n\r\n### What I Learned\r\nDuring this project I learned how to wire certain event handlers based on whether data on a form has been changed or not. I also learned how to create two forms that are dependent and able to interact with each other. I also gained further experience on setting up lists and add options to the menu form. Finally, I was able to practice setting up exception handlers and data validation.\r\n\r\n### Author\r\nOmar Enriquez\r\nomarenriquez11@gmail.com\r\n(949)205-3984\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}